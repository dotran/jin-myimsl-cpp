dnl cf/gd.ac for PLplot  -*- autoconf -*-
dnl
dnl -------------------------------------------------------------------------
dnl Find libgd libraries and headers and libpng, libjpeg, and zlib libraries
dnl required for building png and/or jpeg drivers.
dnl Written by Alan W. Irwin following what is done for X.
dnl -------------------------------------------------------------------------
dnl
dnl Copyright (C) 1994, 2004  Maurice LeBrun
dnl Copyright (C) 2002, 2003, 2004  Rafael Laboissiere
dnl Copyright (C) 2002, 2003, 2004  Alan W. Irwin
dnl Copyright (C) 2003, 2004  Joao Cardoso
dnl Copyright (C) 2004  Andrew Roach
dnl
dnl This file is part of PLplot.
dnl
dnl PLplot is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU Library General Public License as published
dnl by the Free Software Foundation; version 2 of the License.
dnl
dnl PLplot is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU Library General Public License for more details.
dnl
dnl You should have received a copy of the GNU Library General Public License
dnl along with the file PLplot; if not, write to the Free Software
dnl Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA

PL_ARG_WITH(gd-incdir, [User-specified path to the libgd header files], [])
if test "$enable_png" = "yes" -o "$enable_jpeg" = "yes" -o "$enable_gif" = "yes"; then
    if test -z "$with_gd_incdir"; then
        AC_MSG_CHECKING(for GD header files)
        AC_PREPROC_IFELSE([#include <gd.h>],
	[ with_gd_incdir=default
	  AC_MSG_RESULT([found in $with_gd_incdir]) ], [
        incdirs="\
        /usr/include \
        /usr/local/include"

        for dir in $incdirs; do
            if test -r "$dir/gd.h"; then
               with_gd_incdir="$dir"
               break
            fi
        done
        if test -z "$with_gd_incdir"; then
	    AC_MSG_RESULT(not found)
            AC_MSG_WARN([gd header files not found, setting enable_png=no])
            AC_MSG_WARN([and enable_jpeg=no])
            AC_MSG_WARN([and enable_gif=no])
            with_gd_incdir=default
            enable_png=no
            enable_jpeg=no
            enable_gif=no
	else
	    AC_MSG_RESULT([found in $with_gd_incdir])
        fi ])
    else
    	AC_MSG_NOTICE("User-specified path to the libgd header files is $with_gd_incdir")
    fi
    if test "$with_gd_incdir" = "/usr/include"; then
        with_gd_incdir=default
    fi
    GDINCCMD=""
    GDINCPATH=""
    PL_ADD_TO_INCS($with_gd_incdir, GDINCCMD, GDINCPATH)
fi

PL_ARG_WITH(gd-libdir, [User-specified path to libgd], [])
if test "$enable_png" = "yes" -o "$enable_jpeg" = "yes" -o "$enable_gif" = "yes"; then
    if test -z "$with_gd_libdir"; then
        AC_CHECK_LIB(gd, main, [ with_gd_libdir=default ], [
        libdirs="\
        /usr/lib \
        /usr/local/lib"

        for dir in $libdirs; do
            if test -r "$dir/libgd.so" -o -r "$dir/libgd.a"; then
                with_gd_libdir="$dir"
                break
            fi
        done
        if test -z "$with_gd_libdir"; then
            AC_MSG_WARN([gd library not found, setting enable_png=no])
            AC_MSG_WARN([and enable_jpeg=no])
            AC_MSG_WARN([and enable_gif=no])
            with_gd_libdir=default
            enable_png=no
            enable_jpeg=no
            enable_gif=no
        fi ])
    else
    	AC_MSG_NOTICE("User-specified path to libgd is $with_gd_libdir")
    fi
    if test "$with_gd_libdir" = "default"; then
        with_gd_libdir=/usr/lib
    fi
    libgdla=no
    if test -r "$with_gd_libdir/libgd.la"; then
      libgdla=yes
    fi
    if test "$with_gd_libdir" = "/usr/lib"; then
        with_gd_libdir=default
    fi
    GDLIBSTR=-lgd
    GDLIBCMD=""
    GDLIBPATH=""
    PL_ADD_TO_LIBS($with_gd_libdir, $GDLIBSTR, GDLIBCMD, GDLIBPATH)
fi

PL_ARG_WITH(png-libdir, [User-specified path to libpng], [])
if test "$enable_png" = "yes"; then
  if test "$libgdla" = "no"; then
    if test -z "$with_png_libdir"; then
        AC_CHECK_LIB(png, main, [ with_png_libdir=default ], [
        libdirs="\
        /usr/lib \
        /usr/local/lib"

        for dir in $libdirs; do
            if test -r "$dir/libpng.so" -o -r "$dir/libpng.a"; then
                with_png_libdir="$dir"
                break
            fi
        done
        if test -z "$with_png_libdir"; then
            AC_MSG_WARN([png library not found, setting enable_png=no])
            AC_MSG_WARN([and enable_jpeg=no])
            with_png_libdir=default
            enable_png=no
        fi ])
    else
    	AC_MSG_NOTICE("User-specified path to libpng is $with_png_libdir")
    fi
    if test "$with_png_libdir" = "/usr/lib"; then
        with_png_libdir=default
    fi
    PNGLIBSTR=-lpng
    PL_ADD_TO_LIBS($with_png_libdir, $PNGLIBSTR, GDLIBCMD, GDLIBPATH)
  fi
fi

PL_ARG_WITH(jpeg-libdir, [User-specified path to libjpeg], [])
if test "$enable_jpeg" = "yes"; then
  if test "$libgdla" = "no"; then
    if test -z "$with_jpeg_libdir"; then
        AC_CHECK_LIB(jpeg, main, [ with_jpeg_libdir=default ], [
        libdirs="\
        /usr/lib \
        /usr/local/lib"

        for dir in $libdirs; do
            if test -r "$dir/libjpeg.so" -o -r "$dir/libjpeg.a"; then
                with_jpeg_libdir="$dir"
                break
            fi
        done
        if test -z "$with_jpeg_libdir"; then
            AC_MSG_WARN([jpeg library not found, setting enable_jpeg=no])
            with_jpeg_libdir=default
            enable_jpeg=no
        fi ])
    else
    	AC_MSG_NOTICE("User-specified path to libjpeg is $with_jpeg_libdir")
    fi
    if test "$with_jpeg_libdir" = "/usr/lib"; then
        with_jpeg_libdir=default
    fi
    JPEGLIBSTR=-ljpeg
    PL_ADD_TO_LIBS($with_jpeg_libdir, $JPEGLIBSTR, GDLIBCMD, GDLIBPATH)
  fi
fi

PL_ARG_WITH(zlib-libdir, [User-specified path to libz], [])
if test "$enable_png" = "yes"; then
  if test "$libgdla" = "no"; then
    if test -z "$with_zlib_libdir"; then
        AC_CHECK_LIB(z, main, [ with_zlib_libdir=default ], [
        libdirs="\
        /usr/lib \
        /usr/local/lib"

        for dir in $libdirs; do
            if test -r "$dir/libz.so" -o -r "$dir/libz.a"; then
                with_zlib_libdir="$dir"
                break
            fi
        done
        if test -z "$with_zlib_libdir"; then
            AC_MSG_WARN([zlib library not found, setting enable_png=no])
            with_zlib_libdir=default
            enable_png=no
        fi ])
    else
    	AC_MSG_NOTICE("User-specified path to libz is $with_zlib_libdir")
    fi
    if test "$with_zlib_libdir" = "/usr/lib"; then
        with_zlib_libdir=default
    fi
    ZLIBLIBSTR=-lz
    PL_ADD_TO_LIBS($with_zlib_libdir, $ZLIBLIBSTR, GDLIBCMD, GDLIBPATH)
  fi
fi

if test "$enable_png" = "yes" -o "$enable_jpeg" = "yes" -o "$enable_gif" = "yes"; then
#next test requires C language
    AC_LANG_SAVE
    AC_LANG_C

# All required headers and libraries are present for libgd, libpng, libjpeg,
# and zlib.  Now check if this version of libgd supports png and/or jpeg.

    CFLAGS_SAVE=$CFLAGS
    LIBS_SAVE=$LIBS
    LDFLAGS_SAVE=$LDFLAGS

    CFLAGS="$GDINCCMD"
    LIBS="$GDLIBCMD"
    LDFLAGS=

# This test for png support is made in case this is an ancient libgd that
# only supported giff (e.g., the Redhat 6.2 version).
    AC_MSG_CHECKING(for png support in libgd)
    AC_TRY_LINK_FUNC([
      gdImagePng
    ], [AC_MSG_RESULT(yes)], [
      AC_MSG_RESULT(no)
      AC_MSG_WARN(png driver disabled)
      enable_png=no
    ])

    AC_MSG_CHECKING(for jpeg support in libgd)
    AC_TRY_LINK_FUNC([
      gdImageJpeg
    ], [AC_MSG_RESULT(yes)], [
      AC_MSG_RESULT(no)
      AC_MSG_WARN(jpeg driver disabled)
      enable_jpeg=no
    ])

    AC_MSG_CHECKING(for gif support in libgd)
    AC_TRY_LINK_FUNC([
      gdImageGif
    ], [AC_MSG_RESULT(yes)], [
      AC_MSG_RESULT(no)
      AC_MSG_WARN(gif driver disabled)
      enable_gif=no
    ])

    CFLAGS=$CFLAGS_SAVE
    LIBS=$LIBS_SAVE
    LDFLAGS=$LDFLAGS_SAVE

#restore the language the way it was before this test
    AC_LANG_RESTORE

fi

AC_SUBST(GDINCCMD)
AC_SUBST(GDLIBCMD)

