dnl cf/docbook.ac for PLplot  -*- autoconf -*-
dnl
dnl DocBook documentation
dnl
dnl Copyright (C) 1994, 2004  Maurice LeBrun
dnl Copyright (C) 2002, 2003, 2004  Rafael Laboissiere
dnl Copyright (C) 2002, 2003, 2004  Alan W. Irwin
dnl Copyright (C) 2003, 2004  Joao Cardoso
dnl
dnl This file is part of PLplot.
dnl
dnl PLplot is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU Library General Public License as published
dnl by the Free Software Foundation; version 2 of the License.
dnl
dnl PLplot is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU Library General Public License for more details.
dnl
dnl You should have received a copy of the GNU Library General Public License
dnl along with the file PLplot; if not, write to the Free Software
dnl Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA

PL_ARG_ENABLE(builddoc,
  [Enable configuration checks and build of DocBook documentation], no)

PL_ARG_WITH(prebuiltdoc,
  [Assume that the DocBook documentation is already built and present in
   doc/docbook/src, ready to be installed. This option is useful for
   package maintainers.],
  no)

if test "$enable_builddoc" = yes -a "$with_prebuiltdoc" = yes ; then
  AC_MSG_ERROR([Options --enable-builddoc and --with-prebuiltdoc are logically
exclusive and must not be given simultaneously.  Giving up.])
fi

dnl Web site Installation

AC_ARG_WITH(www-user,
  AC_HELP_STRING([--with-www-user=NAME], [User name at WWW host]),
  [WWW_USER="$withval"],
  [WWW_USER=""])
AC_SUBST(WWW_USER)

AC_ARG_WITH(www-group,
  AC_HELP_STRING([--with-www-group=NAME], [Group name at WWW host]),
  [WWW_GROUP="$withval"],
  [WWW_GROUP="plplot"])
AC_SUBST(WWW_GROUP)

AC_ARG_WITH(www-host,
  AC_HELP_STRING([--with-www-host=NAME], [Host name at WWW host]),
  [WWW_HOST="$withval"],
  [WWW_HOST="shell1.sourceforge.net"])
AC_SUBST(WWW_HOST)

AC_ARG_WITH(www-dir,
  AC_HELP_STRING([--with-www-dir=NAME], [Dir name at WWW host]),
  [WWW_DIR="$withval"],
  [WWW_DIR="/home/groups/p/pl/plplot/htdocs/docbook-manual"])
AC_SUBST(WWW_DIR)

AC_ARG_WITH(rsh-command,
  AC_HELP_STRING([--with-rsh-command=NAME], [Remote shell command]),
  [RSH="$withval"],
  [RSH="ssh"])
AC_SUBST(RSH)

AC_ARG_WITH(rcp-command,
  AC_HELP_STRING([--with-rcp-command=NAME], [Remote copy command]),
  [RCP="$withval"],
  [RCP="scp"])
AC_SUBST(RCP)


dnl Website of the PLplot project

AC_ARG_WITH(plplot-website,
  AC_HELP_STRING([--with-plplot-website=NAME], [PLplot web site]),
  [PLPLOT_WEBSITE="$withval"],
  [PLPLOT_WEBSITE="plplot.sf.net"])
AC_SUBST(PLPLOT_WEBSITE)


dnl System wide XML declaration

XML_DECL=/usr/share/xml/declaration/xml.dcl
AC_ARG_WITH(xml-declaration,
  AC_HELP_STRING([--with-xml-declaration=FILE],
    [System wide file containing the SGML declaration for XML.
     Must be a absolute file name.
     Default: /usr/share/xml/declaration/xml.dcl]),
  [XML_DECL=$withval])
AC_SUBST(XML_DECL)


dnl Jade output log

jadelog=jadeout.log
rm -f $jadelog
JADELOG=$jadelog
AC_SUBST(JADELOG)


dnl DTD definitions.
dnl
dnl The following public identifiers should correspond to those in the
dnl SGML source files.

DSSSL_DTD_PUBID="-//James Clark//DTD DSSSL Style Sheet//EN"
DB_SS_HTML_PUBID="-//Norman Walsh//DOCUMENT DocBook HTML Stylesheet//EN"
DB_SS_PRINT_PUBID="-//Norman Walsh//DOCUMENT DocBook Print Stylesheet//EN"
DOCBOOK_DTD_PUBID="-//OASIS//DTD DocBook XML V4.2//EN"

AC_SUBST(DSSSL_DTD_PUBID)
AC_SUBST(DB_SS_HTML_PUBID)
AC_SUBST(DB_SS_PRINT_PUBID)
AC_SUBST(DOCBOOK_DTD_PUBID)

dnl SGML catalogs

AC_ARG_WITH(sgml-catalogs,
  AC_HELP_STRING([--with-sgml-catalogs=CATALOGS],
    [SGML catalogs in a colon (:) separated list.
     Must contain only existent files.]),
  [SGML_CATALOGS=$withval],
  [SGML_CATALOGS=""])

[
for i in `echo $SGML_CATALOGS | sed "s/:/ /g"` ; do
  if test ! -f $i ; then ]
AC_MSG_ERROR([Catalog file $i is not valid.
    Specify only existent files with option --with-sgml-catalogs.])[
  fi
done

if test ! "$SGML_CATALOGS" = "" ;then
  SGML_CATALOGS="-c `echo $SGML_CATALOGS | sed 's/:/ -c /g'`"
fi
]

AC_SUBST(SGML_CATALOGS)

FILE_EXT(html)

PRINT=print
HTML=html
INFO=info
MAN=man

DOCBOOK2X_INC=-I`pwd`/doc/docbook/perl
AC_SUBST(DOCBOOK2X_INC)

dnl Control build of man and info pages

AC_ARG_ENABLE(info,
  AC_HELP_STRING([--disable-info], [Disable build of info pages]),
  [if test "$enable_info" = "no" ; then
    INFO=""
    AC_MSG_WARN([
Info pages will not be build at your request.])
   fi])
AC_ARG_ENABLE(man,
  AC_HELP_STRING([--disable-man], [Disable build of man pages]),
  [if test "$enable_man" = "no" ; then
    MAN=""
    AC_MSG_WARN([
Man pages will not be build at your request.])
    fi])

TARGETS="$PRINT $HTML $INFO $MAN"
AC_SUBST(TARGETS)

CHECK_PROG(perl, [INFO MAN], http://www.perl.com)
PERL=${PERL:-"-@echo perl program not available #"}

if test "$enable_builddoc" = yes -o \
        \( "$enable_octave" = yes -a "$with_prebuiltdoc" = no \) ; then
CHECK_PM(XML::SAX::Expat, xml_sax, [INFO])
CHECK_PM(XML::Parser, xml_parser, [MAN])
CHECK_PM(XML::DOM, xml_dom, [MAN])
fi

if test "$enable_builddoc" = yes ; then

dnl Check for GNU make
CHECK_GNU_MAKE

dnl Check programs

CHECK_PROG(db2x_texixml, [INFO], [http://docbook2x.sourceforge.net])
CHECK_PROG(db2x_xsltproc, [INFO], [http://docbook2x.sourceforge.net])
CHECK_PROG(openjade, [HTML PRINT], http://www.openjade.org)
CHECK_PROG(jadetex, PRINT, http://jadetex.sourceforge.net/)
CHECK_PROG(pdfjadetex, PRINT, http://jadetex.sourceforge.net/)
CHECK_PROG(dvips, PRINT, http://www.ctan.org)
CHECK_PROG(onsgmls, [], http://www.openjade.org)
CHECK_PROG(makeinfo, [INFO], [http://www.gnu.org])

dnl Check public identifiers

CHECK_DTD(
  [DSSSL Style Sheet DTD],
  [dsssl_dtd],
  [],
  [],
  [],
  [[[<!ELEMENT book - O (#PCDATA)>]]],
  [sgml],
  [\"$DSSSL_DTD_PUBID\"],
  [style-sheet.dtd],
  [jade],
  [PRINT HTML])

CHECK_DTD(
  [DocBook HTML Stylesheet],
  [html_ss],
  [[[<!ENTITY dbstyle PUBLIC \"$DB_SS_HTML_PUBID\" CDATA DSSSL>]]],
  [use=\"docbook\"],
  [<external-specification id=\"docbook\" document=\"dbstyle\">],
  [[[<!ELEMENT book - O (#PCDATA)>]]],
  [sgml],
  [\"$DB_SS_HTML_PUBID\"],
  [html/docbook.dsl],
  [docbook-stylesheets],
  [HTML])

CHECK_DTD(
  [DocBook Print Stylesheet],
  [print_ss],
  [[[<!ENTITY dbstyle PUBLIC \"$DB_SS_PRINT_PUBID\" CDATA DSSSL>]]],
  [use=\"docbook\"],
  [<external-specification id=\"docbook\" document=\"dbstyle\">],
  [[[<!ELEMENT book - O (#PCDATA)>]]],
  [tex],
  [\"$DB_SS_PRINT_PUBID\"],
  [print/docbook.dsl],
  [docbook-stylesheets],
  [PRINT])

CHECK_DTD(
  [DocBook DTD],
  [db_dtd],
  [],
  [],
  [],
  [PUBLIC \"$DOCBOOK_DTD_PUBID\"],
  [sgml],
  [\"$DOCBOOK_DTD_PUBID\"],
  [docbookx.dtd],
  [docbook-xml (DTD version 3.1.3)],
  [PRINT HTML])

# These checks only work if perl is checked first (see above)!
CHECK_PM(XML::Parser::PerlSAX, xml_parser_perlsax, [INFO])
CHECK_PM(XML::Writer, xml_writer, [INFO])

DOC_OUTPUT_COMMANDS

fi # enable_builddoc

BASE=$PACKAGE-$VERSION
AC_SUBST(BASE)

HTML_MANIFEST=HTML-MANIFEST
AC_SUBST(HTML_MANIFEST)

BASE_HTML=$PACKAGE-html-$VERSION
AC_SUBST(BASE_HTML)

INFO_MANIFEST=INFO-MANIFEST
AC_SUBST(INFO_MANIFEST)

BASE_INFO=$PACKAGE-info-$VERSION
AC_SUBST(BASE_INFO)

MAN_MANIFEST=MAN-MANIFEST
AC_SUBST(MAN_MANIFEST)

BASE_MAN=$PACKAGE-man-$VERSION
AC_SUBST(BASE_MAN)

MANVOL=3plplot
AC_SUBST(MANVOL)

AM_CONDITIONAL(docbook_build, [test "$with_prebuiltdoc" = no])
AM_CONDITIONAL(enable_docbook,
               [test "$enable_builddoc" = yes -o "$with_prebuiltdoc" = yes])
AM_CONDITIONAL(has_onsgmls, [test "$has_onsgmls" = found])
# This is for conditional compilation of plplot_octave_txt in bindings/octave
AM_CONDITIONAL(has_xml_pm,
  [test "$pldb_cv_xml_dom" = yes -a "$pldb_cv_xml_parser" = yes])

AC_CONFIG_FILES([
    doc/docbook/Makefile
    doc/docbook/src/Makefile
    doc/docbook/src/plplotdoc.xml
    doc/docbook/src/plplotdoc-html.dsl
    doc/docbook/src/plplotdoc-print.dsl
    doc/docbook/bin/api2man.pl
    doc/docbook/www/index.html.in
])
