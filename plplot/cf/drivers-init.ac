dnl cf/drivers-pre.ac for PLplot  -*- autoconf -*-
dnl
dnl Support macros for driver inclusion and help entries.
dnl
dnl Copyright (C) 1994, 2004  Maurice LeBrun
dnl Copyright (C) 2002, 2003, 2004  Rafael Laboissiere
dnl Copyright (C) 2002, 2003, 2004  Alan W. Irwin
dnl Copyright (C) 2003, 2004  Joao Cardoso
dnl Copyright (C) 2004  Andrew Roach
dnl Copyright (C) 2005  Thomas J. Duck
dnl
dnl This file is part of PLplot.
dnl
dnl PLplot is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU Library General Public License as published
dnl by the Free Software Foundation; version 2 of the License.
dnl
dnl PLplot is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU Library General Public License for more details.
dnl
dnl You should have received a copy of the GNU Library General Public License
dnl along with the file PLplot; if not, write to the Free Software
dnl Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA

dnl The configure option --enable-drivers will enable all drivers at once
dnl You can enable/disable drivers either with configure options
dnl (--enable-<driver> or --disable-<driver>) or via the cf_plplot.in file
dnl (remember to use underscores instead of dashes here).  You can disable
dnl all drivers by default by using --disable-drivers.

PL_ARG_ENABLE(drivers, [enable all device drivers], yes)

if test "$enable_dyndrivers" = "yes"; then
    AC_DEFINE(ENABLE_DYNDRIVERS, [],
              [Define if there is support for dynamically loaded drivers])
fi

dnl We think of a "device" as the output medium.  Could be a machine
dnl style (Tektronix, X11), or a file format (Postscript).
dnl
dnl A "driver" is the PLplot code that produces the output on the
dnl medium.
dnl
dnl Some drivers support multiple devices.  But we we need to make sure
dnl we compile only the selected drivers.  That is, if a driver supports
dnl devices not selected, we don't want to compile it at all.  Or if it
dnl supports multiple selected devices, we only want to compile it
dnl once.  To support this, we build an association list between devices
dnl and drivers.  This will be inspected to build up the set of drivers
dnl to be compiled based on which devices are selected.
dnl
dnl The PL_DRIVERS_DEVICE_LIST defined below is a comma separated list of
dnl <device>:<drive>:<enable_default> items.  <enable_default> should be
dnl "yes" or "no" and this will reflect in inlcusion/exclusion by default
dnl (as shown by ./configure --help).
dnl
dnl Ordered alphabetically by second in each pair (the driver) for human
dnl consumption, but this is not necessary.

builtin([define], [PL_DRIVERS_DEVICE_LIST], [
    aqt:aqt:yes,
    cgm:cgm:yes,
    dg300:dg300:no,
    png:gd:yes, jpeg:gd:yes, gif:gd:yes,
    gnome:gnome:no,
    hp7470:hpgl:yes, hp7580:hpgl:yes, lj_hpgl:hpgl:yes,
    imp:impress:no,
    gcw:gcw:yes,
    linuxvga:linuxvga:yes,
    ljii:ljii:no,
    ljiip:ljiip:no,
    mem:mem:yes,
    ntk:ntk:no,
    null:null:yes,
    pbm:pbm:yes,
    plmeta:plmeta:yes,
    ps:ps:yes, psc:ps:yes,
    pstex:pstex:yes,
    xterm:tek:no, tek4010:tek:no, tek4107:tek:no, mskermit:tek:no,
    versaterm:tek:no, vlt:tek:no, conex:tek:no, tek4010f:tek:no,
    tek4107f:tek:no,
    tk:tk:yes,
    tkwin:tkwin:yes,
    wingcc:wingcc:yes,
    xfig:xfig:yes,
    xwin:xwin:yes])

AC_MSG_CHECKING(for dynamic drivers)
PL_ARG_ENABLE_DRIVERS(PL_DRIVERS_DEVICE_LIST)
AC_MSG_RESULT

AC_SUBST(STATIC_DRIVERS)
AC_SUBST(DYNAMIC_DRIVERS)
