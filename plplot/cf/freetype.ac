dnl cf/freetype.ac for PLplot  -*- autoconf -*-
dnl
dnl ------------------------------------------------------------------------
dnl Find freetype 2 library and header required for enabling
dnl driver options for handling the fonts with the freetype library.
dnl Written by Alan W. Irwin.
dnl ------------------------------------------------------------------------
dnl
dnl Copyright (C) 1994, 2004  Maurice LeBrun
dnl Copyright (C) 2002, 2003, 2004  Rafael Laboissiere
dnl Copyright (C) 2002, 2003, 2004, 2005  Alan W. Irwin
dnl Copyright (C) 2003, 2004  Joao Cardoso
dnl Copyright (C) 2004  Andrew Ross
dnl
dnl This file is part of PLplot.
dnl
dnl PLplot is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU Library General Public License as published
dnl by the Free Software Foundation; version 2 of the License.
dnl
dnl PLplot is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU Library General Public License for more details.
dnl
dnl You should have received a copy of the GNU Library General Public License
dnl along with the file PLplot; if not, write to the Free Software
dnl Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA

PL_ARG_WITH(freetype,
  [enable driver options for using freetype library for fonts],
  yes)

PL_ARG_WITH(freetype2-incdir, [User-specified path to the libfreetype2 header files], [])
if test "$with_freetype" = "yes"; then
    if test -z "$with_freetype2_incdir"; then
        AC_MSG_CHECKING(for freetype library header files)
        AC_PREPROC_IFELSE([#include <freetype/config/ftheader.h>],
	                  [ with_freetype2_incdir=default
			    AC_MSG_RESULT([found in $with_freetype2_incdir]) ], [
        incdirs="\
        /usr/include/freetype2 \
        /usr/local/include/freetype2"

        for dir in $incdirs; do
            if test -r "$dir/freetype/config/ftheader.h"; then
               with_freetype2_incdir="$dir"
               break
            fi
        done
        if test -z "$with_freetype2_incdir"; then
            AC_MSG_RESULT(not found)
	    AC_MSG_WARN([freetype header files not found,])
	    AC_MSG_WARN([setting with_freetype=no])
            with_freetype2_incdir=default
            with_freetype=no
	else
            AC_MSG_RESULT([found in $with_freetype2_incdir])
        fi ])
    else
    	AC_MSG_NOTICE("User-specified path to the libfreetype2 header files is $with_freetype2_incdir")
    fi
    if test "$with_freetype2_incdir" = "/usr/include"; then
        with_freetype2_incdir=default
    fi
    FREETYPEINCCMD=""
    FREETYPEINCPATH=""
    PL_ADD_TO_INCS($with_freetype2_incdir, FREETYPEINCCMD, FREETYPEINCPATH)
fi

PL_ARG_WITH(freetype2-libdir, [User-specified path to libfreetype2], [])
if test "$with_freetype" = "yes"; then
    if test -z "$with_freetype2_libdir"; then
        AC_CHECK_LIB(freetype, main, [ with_freetype2_libdir=default ], [
        libdirs="\
        /usr/lib \
        /usr/local/lib"

        for dir in $libdirs; do
            if test -r "$dir/libfreetype.so" -o -r "$dir/libfreetype.a"; then
                with_freetype2_libdir="$dir"
                break
            fi
        done
        if test -z "$with_freetype2_libdir"; then
	    AC_MSG_WARN([freetype library not found, setting with_freetype=no])
            with_freetype2_libdir=default
            with_freetype=no
        fi ])
    else
    	AC_MSG_NOTICE("User-specified path to libfreetype2 is $with_freetype2_libdir")
    fi
    if test "$with_freetype2_libdir" = "/usr/lib"; then
        with_freetype2_libdir=default
    fi
    FREETYPELIBSTR=-lfreetype
    FREETYPELIBCMD=""
    FREETYPELIBPATH=""
    PL_ADD_TO_LIBS($with_freetype2_libdir, $FREETYPELIBSTR, FREETYPELIBCMD, FREETYPELIBPATH)
fi

    PL_ARG_WITH(freetype-font-dir,
      [user-specified directory for freetype fonts],
      [])

    if test -z "$with_freetype_font_dir" ; then
    case "$host_os" in
      *msys | *cygwin | *mingw32 | *pw32 )
        # Windows defines go here
        with_freetype_font_dir=c:/windows/fonts
        ;;
      *)
        with_freetype_font_dir=/usr/share/fonts/truetype/freefont
        ;;
    esac
    fi

PL_ARG_WITH(freetype-sans-font,
  [user-specified sans-serif, medium-weight, upright font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-sans-oblique-font,
  [user-specified sans-serif, medium-weight, oblique font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-sans-italic-font,
  [user-specified sans-serif, medium-weight, italic font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-sans-bold-oblique-font,
  [user-specified sans-serif, bold-weight, oblique font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-sans-bold-italic-font,
  [user-specified sans-serif, bold-weight, italic font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-serif-font,
  [user-specified serif, medium-weight, upright font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-serif-bold-font,
  [user-specified serif, bold-weight, upright font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-serif-italic-font,
  [user-specified serif, medium-weight, italic font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-serif-oblique-font,
  [user-specified serif, medium-weight, oblique font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-serif-bold-italic-font,
  [user-specified serif, bold-weight, italic font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-serif-bold-oblique-font,
  [user-specified serif, bold-weight, oblique font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-mono-font,
  [user-specified monotype, medium-weight, upright font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-mono-bold-font,
  [user-specified monotype, bold-weight, upright font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-mono-oblique-font,
  [user-specified monotype, medium-weight, oblique font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-mono-italic-font,
  [user-specified monotype, medium-weight, italic font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-mono-bold-oblique-font,
  [user-specified monotype, bold-weight, oblique font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-mono-bold-italic-font,
  [user-specified monotype, bold-weight, italic font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-script-font,
  [user-specified script, medium-weight, upright font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-script-bold-font,
  [user-specified script, bold-weight, upright font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-script-oblique-font,
  [user-specified script, medium-weight, oblique font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-script-italic-font,
  [user-specified script, medium-weight, italic font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-script-bold-oblique-font,
  [user-specified script, bold-weight, oblique font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-script-bold-italic-font,
  [user-specified script, bold-weight, italic font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-symbol-font,
  [user-specified symbol, medium-weight, upright font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-symbol-bold-font,
  [user-specified symbol, bold-weight, upright font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-symbol-oblique-font,
  [user-specified symbol, medium-weight, oblique font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-symbol-italic-font,
  [user-specified symbol, medium-weight, italic font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-symbol-bold-oblique-font,
  [user-specified symbol, bold-weight, oblique font that is accessible with freetype],
  [])
PL_ARG_WITH(freetype-symbol-bold-italic-font,
  [user-specified symbol, bold-weight, italic font that is accessible with freetype],
  [])

 case "$host_os" in
    *msys | *cygwin | *mingw32 | *pw32 )
     # Windows defines go here

with_freetype_sans_font=arial.ttf
with_freetype_sans_bold_font=arialbd.ttf
with_freetype_sans_oblique_font=ariali.ttf
with_freetype_sans_italic_font=ariali.ttf
with_freetype_sans_bold_oblique_font=arialbi.ttf
with_freetype_sans_bold_italic_font=arialbi.ttf
with_freetype_serif_font=times.ttf
with_freetype_serif_bold_font=timesbd.ttf
with_freetype_serif_italic_font=timesi.ttf
with_freetype_serif_oblique_font=timesi.ttf
with_freetype_serif_bold_italic_font=timesbi.ttf
with_freetype_serif_bold_oblique_font=timesbi.ttf
with_freetype_mono_font=cour.ttf
with_freetype_mono_bold_font=courbd.ttf
with_freetype_mono_oblique_font=couri.ttf
with_freetype_mono_italic_font=couri.ttf
with_freetype_mono_bold_oblique_font=courbi.ttf
with_freetype_mono_bold_italic_font=courbi.ttf
with_freetype_script_font=arial.ttf
with_freetype_script_bold_font=arialbd.ttf
with_freetype_script_oblique_font=ariali.ttf
with_freetype_script_italic_font=ariali.ttf
with_freetype_script_bold_oblique_font=arialbi.ttf
with_freetype_script_bold_italic_font=arialbi.ttf
with_freetype_symbol_font=times.ttf
with_freetype_symbol_bold_font=timesbd.ttf
with_freetype_symbol_oblique_font=timesi.ttf
with_freetype_symbol_italic_font=timesi.ttf
with_freetype_symbol_bold_oblique_font=timesbi.ttf
with_freetype_symbol_bold_italic_font=timesbi.ttf

;;
 *)

with_freetype_sans_font=FreeSans.ttf
with_freetype_sans_bold_font=FreeSansBold.ttf
with_freetype_sans_oblique_font=FreeSansOblique.ttf
with_freetype_sans_italic_font=FreeSansOblique.ttf
with_freetype_sans_bold_oblique_font=FreeSansBoldOblique.ttf
with_freetype_sans_bold_italic_font=FreeSansBoldOblique.ttf
with_freetype_serif_font=FreeSerif.ttf
with_freetype_serif_bold_font=FreeSerifBold.ttf
with_freetype_serif_italic_font=FreeSerifItalic.ttf
with_freetype_serif_oblique_font=FreeSerifItalic.ttf
with_freetype_serif_bold_italic_font=FreeSerifBoldItalic.ttf
with_freetype_serif_bold_oblique_font=FreeSerifBoldItalic.ttf
with_freetype_mono_font=FreeMono.ttf
with_freetype_mono_bold_font=FreeMonoBold.ttf
with_freetype_mono_oblique_font=FreeMonoOblique.ttf
with_freetype_mono_italic_font=FreeMonoOblique.ttf
with_freetype_mono_bold_oblique_font=FreeMonoBoldOblique.ttf
with_freetype_mono_bold_italic_font=FreeMonoBoldOblique.ttf
with_freetype_script_font=FreeSerif.ttf
with_freetype_script_bold_font=FreeSerifBold.ttf
with_freetype_script_oblique_font=FreeSerifItalic.ttf
with_freetype_script_italic_font=FreeSerifItalic.ttf
with_freetype_script_bold_oblique_font=FreeSerifBoldItalic.ttf
with_freetype_script_bold_italic_font=FreeSerifBoldItalic.ttf
with_freetype_symbol_font=FreeSerif.ttf
with_freetype_symbol_bold_font=FreeSerifBold.ttf
with_freetype_symbol_oblique_font=FreeSerifItalic.ttf
with_freetype_symbol_italic_font=FreeSerifItalic.ttf
with_freetype_symbol_bold_oblique_font=FreeSerifBoldItalic.ttf
with_freetype_symbol_bold_italic_font=FreeSerifBoldItalic.ttf

;;
esac

# Check one of the usual fonts and the symbol font.
# If they are not found, warn and turn off freetype.
if test "$with_freetype" = "yes"; then
    if test -r "$with_freetype_font_dir/$with_freetype_sans_font" -o -r "$with_freetype_font_dir/$with_symbol_font" ; then
       freetype_font_dir="$with_freetype_font_dir"
    fi
    if test -z "$freetype_font_dir" ; then
        AC_MSG_WARN(["freetype fonts not found - please check fonts.  Freetype font support is disabled.",])
	with_freetype=no
    else
        AC_MSG_RESULT([fonts found in $freetype_font_dir])
    fi
fi

if test "$with_freetype" = "yes"; then
    AC_DEFINE(HAVE_FREETYPE, [], [Define if [freetype] is available])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_FONT_DIR, "$freetype_font_dir/", [Directory containing fonts that are accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SANS, "$with_freetype_sans_font", [SANS font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SANS_BOLD, "$with_freetype_sans_bold_font", [SANS_BOLD font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SANS_OBLIQUE, "$with_freetype_sans_oblique_font", [SANS_OBLIQUE font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SANS_ITALIC, "$with_freetype_sans_italic_font", [SANS_ITALIC font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SANS_BOLD_OBLIQUE, "$with_freetype_sans_bold_oblique_font", [SANS_BOLD_OBLIQUE font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SANS_BOLD_ITALIC, "$with_freetype_sans_bold_italic_font", [SANS_BOLD_ITALIC font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SCRIPT, "$with_freetype_script_font", [SCRIPT font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SCRIPT_BOLD, "$with_freetype_script_bold_font", [SCRIPT_BOLD font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SCRIPT_ITALIC, "$with_freetype_script_italic_font", [SCRIPT_ITALIC font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SCRIPT_OBLIQUE, "$with_freetype_script_oblique_font", [SCRIPT_OBLIQUE font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SCRIPT_BOLD_ITALIC, "$with_freetype_script_bold_italic_font", [SCRIPT_BOLD_ITALIC font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SCRIPT_BOLD_OBLIQUE, "$with_freetype_script_bold_oblique_font", [SCRIPT_BOLD_OBLIQUE font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SERIF, "$with_freetype_serif_font", [SERIF font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SERIF_BOLD, "$with_freetype_serif_bold_font", [SERIF_BOLD font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SERIF_ITALIC, "$with_freetype_serif_italic_font", [SERIF_ITALIC font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SERIF_OBLIQUE, "$with_freetype_serif_oblique_font", [SERIF_OBLIQUE font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SERIF_BOLD_ITALIC, "$with_freetype_serif_bold_italic_font", [SERIF_BOLD_ITALIC font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SERIF_BOLD_OBLIQUE, "$with_freetype_serif_bold_oblique_font", [SERIF_BOLD_OBLIQUE font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_MONO, "$with_freetype_mono_font", [MONO font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_MONO_BOLD, "$with_freetype_mono_bold_font", [MONO_BOLD font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_MONO_OBLIQUE, "$with_freetype_mono_oblique_font", [MONO_OBLIQUE font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_MONO_ITALIC, "$with_freetype_mono_italic_font", [MONO_ITALIC font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_MONO_BOLD_OBLIQUE, "$with_freetype_mono_bold_oblique_font", [MONO_BOLD_OBLIQUE font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_MONO_BOLD_ITALIC, "$with_freetype_mono_bold_italic_font", [MONO_BOLD_ITALIC font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SYMBOL, "$with_freetype_symbol_font", [Symbol font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SYMBOL_BOLD, "$with_freetype_symbol_bold_font", [SYMBOL_BOLD font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SYMBOL_OBLIQUE, "$with_freetype_symbol_oblique_font", [SYMBOL_OBLIQUE font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SYMBOL_ITALIC, "$with_freetype_symbol_italic_font", [SYMBOL_ITALIC font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SYMBOL_BOLD_OBLIQUE, "$with_freetype_symbol_bold_oblique_font", [SYMBOL_BOLD_OBLIQUE font accessible from freetype])
    AC_DEFINE_UNQUOTED(PL_FREETYPE_SYMBOL_BOLD_ITALIC, "$with_freetype_symbol_bold_italic_font", [SYMBOL_BOLD_ITALIC font accessible from freetype])
fi
AC_SUBST(FREETYPEINCCMD)
AC_SUBST(FREETYPELIBCMD)
