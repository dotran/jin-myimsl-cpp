The Status of the Python Examples

We have now moved to a new default method of building and installing the
python interface to PLplot. For details see
../../bindings/python/README.pythonbuild.  The principal module is
plplot.py. This make all the common PLplot API available to python in a
user-friendly way.  plplot.py wraps the swig-generated plplotc.py which in
turn wraps the _plplotc extension module (built with the aid of swig). The
extension module, plplot_widget contains some functions that are useful for
prova.py, a rudimentary pyqt GUI for PLplot, and I am also told that these
functions are useful in a Tkinter environment as well.  

A drawback of the present approach is we are not supporting x??.py examples
and pytkdemo which uses those examples because we have not yet figured out a
way to access plframe from the python Tkinter environment.  The stumbling
block before was plplot itself was not dynamically loadable from tcl/tk, but
that option is now available so there is hope that eventually we will be
able to support x??.py and pytkdemo in the future using Tkinter.

We *are* however supporting the xw??.py demos which were created initially
from their x??.py equivalents and modified to work non-interactively from
the command line using the pythondemos.py script. Furthermore, if you need a
widget you might want to try out and improve the prova.py rudimentary pyqt
widget.

To try out the xw??.py examples without a widget simply run pythondemos.py
in the installed directory.  It imports the plplot_python_start module which
does all that is necessary to find the location of the installed plplot
modules.  Thus, there should be no need to specify the location of the
installed plplot modules using the environment variable PYTHONPATH.
Furthermore, the location of the installed fonts and maps is also hardcoded
into libplplot so there should be no necessity of setting the environment
variable PLPLOT_LIB unless you want to use some other alternative.

To try out the xw??.py examples with the pyqt widget simply execute
./prova.py from the installed directory and open any one of the xw??.py
examples and run it.  Note that prova.py requires the qt.py extension module
(part of the python-pyqt package) as well as libsip to work.  Furthermore,
pyqt uses the qt library, but there is a bug in that package so that if
libqt is installed in a non-standard place you must use LD_LIBRARY_PATH to
help pyqt find the qt library.  The bug has been reported, and hopefully
this issue will disappear in the future.

All these xw??.py examples have been thoroughly tested under Linux and
should also work under Unix systems according to the python team comments on
dynamic loading, but that is yet to be tested as of 2002 December.
